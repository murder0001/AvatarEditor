local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Avatar Editor",
   LoadingTitle = "Hai!!",
   LoadingSubtitle = "By Rico",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = ""
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local HomeTab = Window:CreateTab("Home", nil) -- Title, Image
local Section = HomeTab:CreateSection("Home")

local Button = HomeTab:CreateButton({
   Name = "Silver King of the Night",
   Callback = function()
   -- The function that takes place when the button is pressed
   local function l(a, b)
    local weld = Instance.new("Weld")
    weld.Part0 = a.Parent
    weld.Part1 = b.Parent
    weld.C0 = a.CFrame
    weld.C1 = b.CFrame
    weld.Parent = a.Parent
    return weld
end

local function createWeld(name, parent, part0, part1, c0, c1)
    local weld = Instance.new("Weld")
    weld.Name = name
    weld.Part0 = part0
    weld.Part1 = part1
    weld.C0 = c0
    weld.C1 = c1
    weld.Parent = parent
    return weld
end

local function findAttachment(parent, name)
    for _, child in pairs(parent:GetChildren()) do
        if child:IsA("Attachment") and child.Name == name then
            return child
        elseif not (child:IsA("Accessory") or child:IsA("Tool")) then
            local found = findAttachment(child, name)
            if found then
                return found
            end
        end
    end
end

local function attach(assetId, parent)
    local asset = game:GetObjects("rbxassetid://" .. tostring(assetId))[1]
    asset.Parent = parent

    local handle = asset:FindFirstChild("Handle")
    if handle then
        local attachment = handle:FindFirstChildOfClass("Attachment")
        if attachment then
            local foundAttachment = findAttachment(parent, attachment.Name)
            if foundAttachment then
                l(foundAttachment, attachment)
            end
        else
            local head = parent:FindFirstChild("Head")
            if head then
                local cframe = CFrame.new(0, 0.5, 0)
                local attachmentPoint = handle.AttachmentPoint
                createWeld("CustomWeld", parent, head, head, handle, cframe, attachmentPoint)
            end
        end
    end
end

local function onCharacterAdded(character)
    wait(0.1)

    local assetIds = {439945661}

    for _, assetId in ipairs(assetIds) do
        attach(assetId, character)
    end
end

game.Players.LocalPlayer.CharacterAdded:Connect(onCharacterAdded)

if game.Players.LocalPlayer.Character then
    onCharacterAdded(game.Players.LocalPlayer.Character)
end

   end,
})

local Button = HomeTab:CreateButton({
   Name = "Lord of the Federation",
   Callback = function()
   -- The function that takes place when the button is pressed
   local function l(a, b)
    local weld = Instance.new("Weld")
    weld.Part0 = a.Parent
    weld.Part1 = b.Parent
    weld.C0 = a.CFrame
    weld.C1 = b.CFrame
    weld.Parent = a.Parent
    return weld
end

local function createWeld(name, parent, part0, part1, c0, c1)
    local weld = Instance.new("Weld")
    weld.Name = name
    weld.Part0 = part0
    weld.Part1 = part1
    weld.C0 = c0
    weld.C1 = c1
    weld.Parent = parent
    return weld
end

local function findAttachment(parent, name)
    for _, child in pairs(parent:GetChildren()) do
        if child:IsA("Attachment") and child.Name == name then
            return child
        elseif not (child:IsA("Accessory") or child:IsA("Tool")) then
            local found = findAttachment(child, name)
            if found then
                return found
            end
        end
    end
end

local function attach(assetId, parent)
    local asset = game:GetObjects("rbxassetid://" .. tostring(assetId))[1]
    asset.Parent = parent

    local handle = asset:FindFirstChild("Handle")
    if handle then
        local attachment = handle:FindFirstChildOfClass("Attachment")
        if attachment then
            local foundAttachment = findAttachment(parent, attachment.Name)
            if foundAttachment then
                l(foundAttachment, attachment)
            end
        else
            local head = parent:FindFirstChild("Head")
            if head then
                local cframe = CFrame.new(0, 0.5, 0)
                local attachmentPoint = handle.AttachmentPoint
                createWeld("CustomWeld", parent, head, head, handle, cframe, attachmentPoint)
            end
        end
    end
end

local function onCharacterAdded(character)
    wait(0.1)

    local assetIds = {88885069}

    for _, assetId in ipairs(assetIds) do
        attach(assetId, character)
    end
end

game.Players.LocalPlayer.CharacterAdded:Connect(onCharacterAdded)

if game.Players.LocalPlayer.Character then
    onCharacterAdded(game.Players.LocalPlayer.Character)
end

   end,
})
Rayfield:LoadConfiguration()
